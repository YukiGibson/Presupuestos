@model Presupuestos.ViewModels.PipelineViewModel
@{
    ViewBag.Title = "Detalle Pipeline Ventas";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section id="search-bar">
    @using (Html.BeginForm("detalle", "Pipeline", FormMethod.Post))
    {
        <div class="jumbotron">
            <h2 class="display-6">Detalle Pipeline Ventas - Sesion #@Html.DisplayFor(p => p.session)</h2>
            <hr class="my-4"/>
            <div class="form-group row">
                <label for="newSession" class="col-sm-12 col-form-label">Status : @Html.DisplayFor(o => o.status)</label>
                <br />
                <div class="col-sm-10">
                    <input id="newSession" type="submit" class="btn btn-default" value="Cargar Nueva Sesión" 
                           onclick="loading('newSession')" onsubmit="loading('newSession')" />
                    <input type="hidden" value="@Html.DisplayFor(p => p.session)" id="session" name="session" />
                </div>
            </div>
            <p>
                El proceso de carga de sesión en el pipeline de ventas, se cargan los presupuestos
                de Metrics que cumplan las siguientes reglas:
            </p>
            <ol>
                <li>No estén <strong>cancelados</strong> o <strong>cerrados</strong></li>
                <li>No sean de previsión</li>
                <li>Con una probabilidad de venta mayor al 60%</li>
                <li>La orden de producción no contenga <i>.R</i> al final de este</li>
                <li>Que tengan entregas disponibles apartir del día en que se cargue la sesión</li>
            </ol>
        </div>
        
    }
    @if (Model.loadStatus != null)
    {
        if (Model.loadStatus.Count != 0)
        {
            string value = "out";
            if (Model.loadStatus.TryGetValue("Error", out value))
            {
                <div class="alert alert-dismissible alert-danger">
                    <button type="button" class="close" data-dismiss="alert">&times;</button>
                    <strong>!Error!</strong> @Model.loadStatus["Error"]
                </div>
            }
            else if (Model.loadStatus.TryGetValue("Success", out value))
            {
                <div class="alert alert-dismissible alert-success">
                    <button type="button" class="close" data-dismiss="alert">&times;</button>
                    <strong>!Éxito!</strong> @Model.loadStatus["Success"]
                </div>
                }
            }
        }
</section>

<section id="list-display" class="BlackText">
    <h3>Resultados :</h3>
        <div class="table-responsive">
            <table class="detail-table">
                <thead>
                    <tr>
                        @using (Html.BeginForm("detalle", "Pipeline", FormMethod.Get))
                        {
                            <th>
                                <input type="submit" value="@Html.DisplayNameFor(p => p.venta.Vendedor)"
                                       id="searchKeyword" name="searchKeyword" />
                            </th>
                            <th>
                                <input type="submit" value="@Html.DisplayNameFor(p => p.venta.Mes)"
                                       id="searchKeyword" name="searchKeyword" />
                            </th>
                            <th>
                                <input type="submit" value="@Html.DisplayNameFor(p => p.venta.Año)"
                                       id="searchKeyword" name="searchKeyword" />
                            </th>
                            <th>
                                <input type="submit" value="@Html.DisplayNameFor(p => p.venta.MesesDiferencia)"
                                       id="searchKeyword" name="searchKeyword" />
                            </th>
                            <th>
                                <input type="submit" value="@Html.DisplayNameFor(p => p.venta.Presupuesto)"
                                       id="searchKeyword" name="searchKeyword" />
                            </th>
                            <th>
                                <input type="submit" value="@Html.DisplayNameFor(p => p.venta.OP)"
                                       id="searchKeyword" name="searchKeyword" />
                            </th>
                            <th>
                                <input type="submit" value="@Html.DisplayNameFor(p => p.venta.TipoProducto)"
                                       id="searchKeyword" name="searchKeyword" />
                            </th>
                            <th>
                                <input type="submit" value="@Html.DisplayNameFor(p => p.venta.CantidadTotal)"
                                       id="searchKeyword" name="searchKeyword" />
                            </th>
                            <th>
                                <input type="submit" value="@Html.DisplayNameFor(p => p.venta.Cantidad)"
                                       id="searchKeyword" name="searchKeyword" />
                            </th>
                            <th>
                                <input type="submit" value="@Html.DisplayNameFor(p => p.venta.Titulo)"
                                       id="searchKeyword" name="searchKeyword" />
                            </th>
                            <th>
                                <input type="submit" value="@Html.DisplayNameFor(p => p.venta.Cliente)"
                                       id="searchKeyword" name="searchKeyword" />
                            </th>
                            <th>
                                <input type="submit" value="@Html.DisplayNameFor(p => p.venta.PorFacturar)"
                                       id="searchKeyword" name="searchKeyword" />
                            </th>
                            <th>
                                <input type="submit" value="@Html.DisplayNameFor(p => p.venta.Costo)"
                                       id="searchKeyword" name="searchKeyword" />
                            </th>
                            <th>
                                <input type="submit" value="@Html.DisplayNameFor(p => p.venta.Rentabilidad)"
                                       id="searchKeyword" name="searchKeyword" />
                            </th>
                            <th>
                                <input type="submit" value="@Html.DisplayNameFor(p => p.venta.ProbabilidadVenta)"
                                       id="searchKeyword" name="searchKeyword" />
                            </th>
                            <th>
                                <input type="submit" value="@Html.DisplayNameFor(p => p.venta.Estimado)"
                                       id="searchKeyword" name="searchKeyword" />
                            </th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @if (Model.ventas != null)
                {
                    foreach (var item in Model.ventas)
                    {
                            <tr class="highlight-row">
                                <td>@Html.DisplayFor(p => item.Vendedor)</td>
                                <td>@Html.DisplayFor(p => item.Mes)</td>
                                <td>@Html.DisplayFor(p => item.Año)</td>
                                <td>@Html.DisplayFor(p => item.MesesDiferencia)</td>
                                <td>@Html.DisplayFor(p => item.Presupuesto)</td>
                                <td>@Html.DisplayFor(p => item.OP)</td>
                                <td>@Html.DisplayFor(p => item.TipoProducto)</td>
                                <td>@Html.DisplayFor(p => item.CantidadTotal)</td>
                                <td>@Html.DisplayFor(p => item.Cantidad)</td>
                                <td>@Html.DisplayFor(p => item.Titulo)</td>
                                <td>@Html.DisplayFor(p => item.Cliente)</td>
                                <td>$@Html.DisplayFor(p => item.PorFacturar)</td>
                                <td>$@Html.DisplayFor(p => item.Costo)</td>
                                <td>$@Html.DisplayFor(p => item.Rentabilidad)</td>
                                <td>@Html.DisplayFor(p => item.ProbabilidadVenta)</td>
                                <td>@Html.DisplayFor(p => item.Estimado)</td>
                            </tr>
                        }
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="16">Fin</td>
                    </tr>
                </tfoot>
            </table>
        </div>

    
</section>

<section class="text-center">
    <a href="#Top" class="btn btn-info">Volver al inicio</a>
</section>

