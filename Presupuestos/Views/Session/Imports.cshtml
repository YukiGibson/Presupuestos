@model Presupuestos.ViewModels.SessionViewModel
@{
    ViewBag.Title = "Imports";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<section id="imports">

    @using (Html.BeginForm("Imports", "Session", FormMethod.Post, new { id = "CargarForm" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        <div class="jumbotron">
            <h2 class="display-5">Carga de Sesión</h2>
            <p class="lead">El proceso de carga traerá los últimos presupuestos que se hayan creado anteriormente</p>

            <p class="display-5">
                Sesión #@Html.DisplayFor(model => model.DocumentNumber) -
                @if (Model.LastUpdate != null)
                {
                    <span>Última vez corrido: @Html.DisplayFor(model => model.LastUpdate)</span>
                }
            </p>
            <div class="form-inline">
                    @Html.LabelFor(model => model.StartDate, new { @style = "text-align:left;" })
                    @Html.TextBoxFor(model => model.StartDate, new
               {
                   @style = "color:#fff;",
                   @class = "form-control",
                   @disabled = "",
                   Value = DateTime.Today.ToString("dd/MM/yy")
               })
                    <input id="uploadButton" type="submit" value="Cargar" class="btn btn-primary" autocomplete="off"
                           onclick="loading('uploadButton')" onsubmit="loading('uploadButton')" />
            </div>
        </div>
    }
</section>

<section id="alerts">
    @if (Model != null)
    {
        if (Model.MessageType != null)
        {
            string value = "out";
            if (Model.MessageType.TryGetValue("Success", out value))
            {
                <div class="alert alert-dismissible alert-success">
                    <button type="button" class="close" data-dismiss="alert">&times;</button>
                    <strong>!Exito!</strong> @Model.MessageType["Success"]
                </div>
            }
            else if (Model.MessageType.TryGetValue("Error", out value))
            {
                <div class="alert alert-dismissible alert-danger">
                    <button type="button" class="close" data-dismiss="alert">&times;</button>
                    <strong>!Error!</strong> @Model.MessageType["Error"]
                </div>
            }
        }
    }

</section>

<section>
    <div class="table-responsive">
        <table class="table table-condensed table-striped">
            <thead>
                <tr class="BlackText">
                    <th>#</th>
                    <th>@Html.DisplayNameFor(m => Model.Projection.Presupuesto)</th>
                    <th>@Html.DisplayNameFor(m => Model.Projection.Cliente)</th>
                    <th>@Html.DisplayNameFor(m => Model.Projection.Sustrato)</th>
                    <th>@Html.DisplayNameFor(m => Model.Projection.Ejecutivo)</th>
                </tr>
            </thead>
            <tbody style="background-color:#485563">

                @if (Model.Projections != null)
            {
                int counter = 1;
                foreach (var item in Model.Projections)
                {
                        <tr>
                            <th scope="row">@(counter++)</th>
                            <td>@Html.DisplayFor(m => item.Presupuesto)</td>
                            <td>@Html.DisplayFor(m => item.Cliente)</td>
                            <td>@Html.DisplayFor(m => item.Sustrato)</td>
                            <td>@Html.DisplayFor(m => item.Ejecutivo)</td>
                        </tr>
                    }
                }
                <tr>
                    <td colspan="5" style="text-align:center"><b>Final de la lista</b></td>
                </tr>
            </tbody>
        </table>
    </div>
    <div class="col-lg-12">
        <div class="text-center">
            <br />
            <a href="#Top" class="btn btn-info">Ir al inicio de la página</a>
        </div>
    </div>
</section>



@section Scripts {
    <script type="text/javascript">
        //$(document).ready(function () {
        //    var dateToday = new Date();
        //    $(".datepicker").val(dateToday.toLocaleDateString('en-GB'));
        //    $(".datepicker").datepicker({
        //        changeMonth: true,
        //        changeYear: true,
        //        yearRange: "-2:+2",
        //        dateFormat: 'dd/mm/yy'
        //    });
        //});
    </script>
}
